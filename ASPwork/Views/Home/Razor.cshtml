@model ASPwork.Models.Home.RazorModel
@{
    ViewData["Title"] = "Razor";
}
<style>
    body {
        background-color: #00FF7F;
        font-weight: bold;
    }
</style>
<div>
    <h1 class="display-4">Вступ до Razor</h1>
</div>
<p>
    Razor - синтаксична варіація C# для викорстання у представленнях.
</p>
<h3>Виведення даних</h3>
<p>
    Для виведення змінної достатньо перед неї зазначити символ &commat;,
    наприклад, <code>&commat;Model.IntValue = @Model.IntValue</code>.
    Особливість Razor у тому, що він намагається самостійно визначити
    межі інструкції. У простих виразах йому це вдається, але не завжди,
    наприклад, <code>&commat;Model.IntValue + 1 = @Model.IntValue + 1</code>.
    У такому разі вживається конструкція &commat;(...)
    <code>&commat;(Model.IntValue + 1) = @(Model.IntValue + 1)</code>.
</p>
<h3>Блоки коду</h3>
<p>
    Інструкції, які не потрібно виводити, оточуються &commat;{...}.
    Це ніяк не відбивається на вигляді сторінки, такі блоки для
    відображення не беруть участь. У них допустимі довільні інструкції
    C#, у т.ч. введення нових змінних. Після інструкції
    <code>
        &commat;{ int y = 20; }
    </code>
    @{
        int y = 20;
    }
    Можна вивести нову змінну <code>&commat;y = @y</code>
</p>
<h3>Умовна верстка</h3>
<p>
    Razor дозволяє включати (чи не включати) певні частини HTML в
    залежності від програмних умов. Для цього вживається &commat;if(){...}
    Блок, що не проходить умову, не включається до HTML жодним чином,
    його просто не існує в HTML. Аналогічним чином працює &commat;switch(){...}
</p>
@if (Model.BoolValue)
{
    <p>Цей блок буде видно, якщо Model.BoolValue буде true</p>
}
else
{
    <p>Цей блок буде видно, якщо Model.BoolValue буде false</p>
}
<p>
    Та ж особливість (автоматичного визначення) дозволяє "змішувати"
    програмні інструкції та розмітку. Для уникнення помилок усю розмітку
    бажано оточувати тегами.
</p>
<code>
    &commat;if (Model.BoolValue)<br />
    {<br />
    &nbsp; &nbsp; int w = 30;  <strong>// Це інструкція</strong><br />
    &nbsp; &nbsp; &lt;p>Цей блок буде видно, ...&lt;/p>  <strong>// Це верстка</strong><br />
    &nbsp; &nbsp; w += 10;  <strong>// Це інструкція</strong> <br />
    &nbsp; &nbsp; &lt;span>У даному місці w = &commat;w &lt;span>  <strong>// Це верстка</strong><br />
    &nbsp; &nbsp; Щось друкуємо без тегу  <strong>// Це помилка, сприймається як код</strong><br />
    }<br />
</code>